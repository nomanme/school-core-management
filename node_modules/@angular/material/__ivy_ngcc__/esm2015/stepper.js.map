{"version":3,"file":"stepper.js","sources":["../../../src/lib/stepper/step-label.ts","../../../src/lib/stepper/stepper-intl.ts","../../../src/lib/stepper/step-header.ts","../../../src/lib/stepper/stepper-animations.ts","../../../src/lib/stepper/stepper-icon.ts","../../../src/lib/stepper/stepper.ts","../../../src/lib/stepper/stepper-button.ts","../../../src/lib/stepper/stepper-module.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\nimport {CdkStepLabel} from '@angular/cdk/stepper';\n\n@Directive({\n  selector: '[matStepLabel]',\n})\nexport class MatStepLabel extends CdkStepLabel {\n  constructor(template: TemplateRef<any>) {\n    super(template);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Stepper data that is required for internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatStepperIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** Label that is rendered below optional steps. */\n  optionalLabel: string = 'Optional';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  ViewEncapsulation,\n  TemplateRef,\n} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {MatStepLabel} from './step-label';\nimport {MatStepperIntl} from './stepper-intl';\nimport {MatStepperIconContext} from './stepper-icon';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step-header',\n  templateUrl: 'step-header.html',\n  styleUrls: ['step-header.css'],\n  host: {\n    'class': 'mat-step-header',\n    'role': 'tab',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStepHeader implements OnDestroy {\n  private _intlSubscription: Subscription;\n\n  /** State of the given step. */\n  @Input() state: string;\n\n  /** Label of the given step. */\n  @Input() label: MatStepLabel | string;\n\n  /** Overrides for the header icons, passed in via the stepper. */\n  @Input() iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>};\n\n  /** Index of the given step. */\n  @Input() index: number;\n\n  /** Whether the given step is selected. */\n  @Input() selected: boolean;\n\n  /** Whether the given step label is active. */\n  @Input() active: boolean;\n\n  /** Whether the given step is optional. */\n  @Input() optional: boolean;\n\n  constructor(\n    public _intl: MatStepperIntl,\n    private _focusMonitor: FocusMonitor,\n    private _element: ElementRef,\n    changeDetectorRef: ChangeDetectorRef) {\n    _focusMonitor.monitor(_element.nativeElement, true);\n    this._intlSubscription = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._intlSubscription.unsubscribe();\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\n  }\n\n  /** Returns string label of given step if it is a text label. */\n  _stringLabel(): string | null {\n    return this.label instanceof MatStepLabel ? null : this.label;\n  }\n\n  /** Returns MatStepLabel if the label of given step is a template label. */\n  _templateLabel(): MatStepLabel | null {\n    return this.label instanceof MatStepLabel ? this.label : null;\n  }\n\n  /** Returns the host HTML element. */\n  _getHostElement() {\n    return this._element.nativeElement;\n  }\n\n  /** Template context variables that are exposed to the `matStepperIcon` instances. */\n  _getIconContext(): MatStepperIconContext {\n    return {\n      index: this.index,\n      active: this.active,\n      optional: this.optional\n    };\n  }\n\n  focus() {\n    this._getHostElement().focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/** Animations used by the Material steppers. */\nexport const matStepperAnimations: {\n  readonly horizontalStepTransition: AnimationTriggerMetadata;\n  readonly verticalStepTransition: AnimationTriggerMetadata;\n} = {\n  /** Animation that transitions the step along the X axis in a horizontal stepper. */\n  horizontalStepTransition: trigger('stepTransition', [\n    state('previous', style({transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden'})),\n    state('current', style({transform: 'none', visibility: 'visible'})),\n    state('next', style({transform: 'translate3d(100%, 0, 0)', visibility: 'hidden'})),\n    transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n  ]),\n\n  /** Animation that transitions the step along the Y axis in a vertical stepper. */\n  verticalStepTransition: trigger('stepTransition', [\n    state('previous', style({height: '0px', visibility: 'hidden'})),\n    state('next', style({height: '0px', visibility: 'hidden'})),\n    state('current', style({height: '*', visibility: 'visible'})),\n    transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input, TemplateRef} from '@angular/core';\n\n/** Template context available to an attached `matStepperIcon`. */\nexport interface MatStepperIconContext {\n  /** Index of the step. */\n  index: number;\n  /** Whether the step is currently active. */\n  active: boolean;\n  /** Whether the step is optional. */\n  optional: boolean;\n}\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[matStepperIcon]',\n})\nexport class MatStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('matStepperIcon') name: 'edit' | 'done' | 'number';\n\n  constructor(public templateRef: TemplateRef<MatStepperIconContext>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {CdkStep, CdkStepper, StepContentPositionState} from '@angular/cdk/stepper';\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Optional,\n  Output,\n  QueryList,\n  SkipSelf,\n  TemplateRef,\n  ViewChildren,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {FormControl, FormGroupDirective, NgForm} from '@angular/forms';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {takeUntil} from 'rxjs/operators';\nimport {matStepperAnimations} from './stepper-animations';\nimport {MatStepperIcon, MatStepperIconContext} from './stepper-icon';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-step',\n  templateUrl: 'step.html',\n  providers: [{provide: ErrorStateMatcher, useExisting: MatStep}],\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matStep',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatStep extends CdkStep implements ErrorStateMatcher {\n  /** Content for step label given by `<ng-template matStepLabel>`. */\n  @ContentChild(MatStepLabel) stepLabel: MatStepLabel;\n\n  constructor(@Inject(forwardRef(() => MatStepper)) stepper: MatStepper,\n              @SkipSelf() private _errorStateMatcher: ErrorStateMatcher) {\n    super(stepper);\n  }\n\n  /** Custom error state matcher that additionally checks for validity of interacted form. */\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n\n    // Custom error state checks for the validity of form that is not submitted or touched\n    // since user can trigger a form change by calling for another step without directly\n    // interacting with the current form.\n    const customErrorState = !!(control && control.invalid && this.interacted);\n\n    return originalErrorState || customErrorState;\n  }\n}\n\n\n@Directive({\n  selector: '[matStepper]'\n})\nexport class MatStepper extends CdkStepper implements AfterContentInit {\n  /** The list of step headers of the steps in the stepper. */\n  @ViewChildren(MatStepHeader) _stepHeader: QueryList<MatStepHeader>;\n\n  /** Steps that the stepper holds. */\n  @ContentChildren(MatStep) _steps: QueryList<MatStep>;\n\n  /** Custom icon overrides passed in by the consumer. */\n  @ContentChildren(MatStepperIcon) _icons: QueryList<MatStepperIcon>;\n\n  /** Event emitted when the current step is done transitioning in. */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: {[key: string]: TemplateRef<MatStepperIconContext>} = {};\n\n  ngAfterContentInit() {\n    const icons = this._icons.toArray();\n\n    ['edit', 'done', 'number'].forEach(name => {\n      const override = icons.find(icon => icon.name === name);\n\n      if (override) {\n        this._iconOverrides[name] = override.templateRef;\n      }\n    });\n\n    // Mark the component for change detection whenever the content children query changes\n    this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe(() => this._stateChanged());\n  }\n\n  _animationDone(event: AnimationEvent) {\n    if ((event.toState as StepContentPositionState) === 'current') {\n      this.animationDone.emit();\n    }\n  }\n}\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-horizontal-stepper',\n  exportAs: 'matHorizontalStepper',\n  templateUrl: 'stepper-horizontal.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-horizontal',\n    'aria-orientation': 'horizontal',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.horizontalStepTransition],\n  providers: [{provide: MatStepper, useExisting: MatHorizontalStepper}],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatHorizontalStepper extends MatStepper { }\n\n@Component({\n  moduleId: module.id,\n  selector: 'mat-vertical-stepper',\n  exportAs: 'matVerticalStepper',\n  templateUrl: 'stepper-vertical.html',\n  styleUrls: ['stepper.css'],\n  inputs: ['selectedIndex'],\n  host: {\n    'class': 'mat-stepper-vertical',\n    'aria-orientation': 'vertical',\n    'role': 'tablist',\n  },\n  animations: [matStepperAnimations.verticalStepTransition],\n  providers: [{provide: MatStepper, useExisting: MatVerticalStepper}],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatVerticalStepper extends MatStepper {\n  constructor(@Optional() dir: Directionality, changeDetectorRef: ChangeDetectorRef) {\n    super(dir, changeDetectorRef);\n    this._orientation = 'vertical';\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\nimport {CdkStepper, CdkStepperNext, CdkStepperPrevious} from '@angular/cdk/stepper';\nimport {MatStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperNext]',\n  host: {\n    '(click)': '_stepper.next()',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\n})\nexport class MatStepperNext extends CdkStepperNext {}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[matStepperPrevious]',\n  host: {\n    '(click)': '_stepper.previous()',\n    '[type]': 'type',\n  },\n  inputs: ['type'],\n  providers: [{provide: CdkStepper, useExisting: MatStepper}]\n})\nexport class MatStepperPrevious extends CdkStepperPrevious {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {ErrorStateMatcher, MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatStepHeader} from './step-header';\nimport {MatStepLabel} from './step-label';\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\nimport {MatStepperIcon} from './stepper-icon';\nimport {MatStepperIntl} from './stepper-intl';\n\n\n@NgModule({\n  imports: [\n    MatCommonModule,\n    CommonModule,\n    PortalModule,\n    MatButtonModule,\n    CdkStepperModule,\n    MatIconModule,\n    MatRippleModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  declarations: [\n    MatHorizontalStepper,\n    MatVerticalStepper,\n    MatStep,\n    MatStepLabel,\n    MatStepper,\n    MatStepperNext,\n    MatStepperPrevious,\n    MatStepHeader,\n    MatStepperIcon,\n  ],\n  providers: [MatStepperIntl, ErrorStateMatcher],\n})\nexport class MatStepperModule {}\n"]}