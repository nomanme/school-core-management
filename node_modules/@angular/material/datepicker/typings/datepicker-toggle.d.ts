import { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';
import { MatDatepicker } from './datepicker';
import { MatDatepickerIntl } from './datepicker-intl';
/** Can be used to override the icon of a `matDatepickerToggle`. */
import * as ɵngcc0 from '@angular/core';
export declare class MatDatepickerToggleIcon {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatDatepickerToggleIcon, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<MatDatepickerToggleIcon, "[matDatepickerToggleIcon]", never, {}, {}, never>;
}
export declare class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {
    _intl: MatDatepickerIntl;
    private _changeDetectorRef;
    private _stateChanges;
    /** Datepicker instance that the button will toggle. */
    datepicker: MatDatepicker<D>;
    /** Whether the toggle button is disabled. */
    disabled: boolean;
    private _disabled;
    /** Custom icon set by the consumer. */
    _customIcon: MatDatepickerToggleIcon;
    constructor(_intl: MatDatepickerIntl, _changeDetectorRef: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    ngAfterContentInit(): void;
    _open(event: Event): void;
    private _watchStateChanges();
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatDatepickerToggle<any>, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatDatepickerToggle<any>, "mat-datepicker-toggle", ["matDatepickerToggle"], { "disabled": "disabled"; "datepicker": "for"; }, {}, ["_customIcon"], ["[matDatepickerToggleIcon]"]>;
}

//# sourceMappingURL=datepicker-toggle.d.ts.map